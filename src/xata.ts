// Generated by Xata Codegen 0.29.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "rsvp_guest",
    columns: [
      { name: "guest_name", type: "string" },
      { name: "rsvp_date", type: "datetime" },
      {
        name: "dietary_requirements",
        type: "string",
        notNull: true,
        defaultValue: "none",
      },
      { name: "party_id", type: "link", link: { table: "rsvp_party" } },
      { name: "attending", type: "bool", notNull: true, defaultValue: "false" },
    ],
  },
  {
    name: "rsvp_party",
    columns: [{ name: "party_name", type: "string" }],
    revLinks: [{ column: "party_id", table: "rsvp_guest" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type RsvpGuest = InferredTypes["rsvp_guest"];
export type RsvpGuestRecord = RsvpGuest & XataRecord;

export type RsvpParty = InferredTypes["rsvp_party"];
export type RsvpPartyRecord = RsvpParty & XataRecord;

export type DatabaseSchema = {
  rsvp_guest: RsvpGuestRecord;
  rsvp_party: RsvpPartyRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Craig-A-Shields-s-workspace-65e3at.eu-west-1.xata.sh/db/craig-and-hannah-wedding",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
